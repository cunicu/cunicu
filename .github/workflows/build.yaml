# yaml-language-server: $schema=https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/schemas/json/github-workflow.json
---
name: Build

on: 
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build:
    name: Build for ${{ matrix.os }} on ${{ matrix.arch }}${{ matrix.arch == 'arm' && format('-v{0}', matrix.arm) || ''}}
    runs-on: ${{ matrix.runner || 'ubuntu-latest' }}

    strategy:
      fail-fast: false
      matrix:
        include:
        - os: linux
          arch: amd64
          runner: ubuntu-latest

        - os: linux
          arch: arm64
          runner: ubuntu-latest

        - os: linux
          arch: arm
          arm: 6
          runner: ubuntu-latest

        - os: linux
          arch: arm
          arm: 7
          runner: ubuntu-latest

        - os: darwin
          arch: arm64
          runner: macos-latest

        - os: darwin
          arch: amd64
          runner: macos-latest

        - os: windows
          arch: arm64
          runner: windows-latest

        - os: windows
          arch: amd64
          runner: windows-latest

    env:
      GOOS: ${{ matrix.os }}
      GOARCH: ${{ matrix.arch }}
      GOARM: ${{ matrix.arm || '' }}

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      if: ${{ matrix.os == 'linux' }}
      run: sudo apt-get install -y
              coturn
              protobuf-compiler
              make

    - name: Install dependencies
      if: ${{ matrix.os == 'darwin' }}
      run: brew install
            protobuf
            make

    - name: Install dependencies
      if: ${{ matrix.os == 'windows' }}
      run: choco install
            protoc
            make

    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version-file: 'go.mod'
        check-latest: true
        cache: true
    
    - name: Install build and test dependencies
      if: ${{ matrix.arch == 'amd64' || matrix.os == 'linux' }}
      env:
        GOARCH: amd64
      run: |
        go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
        go install github.com/onsi/ginkgo/v2/ginkgo@latest
        go install sigs.k8s.io/controller-runtime/tools/setup-envtest@latest
        go install honnef.co/go/tools/cmd/staticcheck@latest

    - name: Run wice build
      run: go build -o wice ./cmd
      
    - name: Run vet
      if: ${{ matrix.os == 'linux' }}
      run: go vet --copylocks=false ./...

    - name: Run staticcheck
      if: ${{ matrix.os == 'linux' }}
      run: staticcheck ./...

    - name: Run root-less tests
      if: ${{ matrix.arch == 'amd64' }}
      run: make tests GINKGO_EXTRA_OPTS="--skip-package=./test/cases,./pkg/device"

    # - name: Run tests requiring root access
    #   if: ${{ matrix.os == 'linux' && matrix.arch == 'amd64' }}
    #   run: |
    #     sudo --preserve-env \
    #       env "PATH=$PATH" \
    #       make tests

    - name: Report test coverage to Codacy
      if: ${{ matrix.os == 'linux' && matrix.arch == 'amd64' }}
      uses: codacy/codacy-coverage-reporter-action@v1
      env:
        CODACY_REPORTER_TMP_FOLDER: .codacy
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        coverage-reports: coverprofile.out
        force-coverage-parser: go

    - name: Report test coverage to Codecov
      if: ${{ matrix.os == 'linux' && matrix.arch == 'amd64' }}
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: coverprofile.out