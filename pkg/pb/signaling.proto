syntax = "proto3";

package wice;
option go_package = "riasc.eu/wice/pkg/pb";

import "common.proto";
import "session.proto";
import "peer.proto";
import "message.proto";

enum BackendType {
    MULTI = 0;
    P2P = 1;
    K8S = 2;
    GRPC = 3;
    INPROCESS = 4;
    MANUAL = 5;
}

message SignalingEnvelope {
    bytes sender = 1;
    bytes recipient = 2;

    EncryptedMessage contents = 3; // of type SignalingMessage
}

message SignalingMessage {
    SessionDescription session = 10;
    PeerDescription peer = 11;
}

message SubscribeParams {
    bytes key = 1;
}

service Signaling {
    rpc Subscribe(SubscribeParams) returns (stream SignalingEnvelope) {}
    rpc Publish(SignalingEnvelope) returns (Error) {}
}