// SPDX-FileCopyrightText: 2023 Steffen Vogel <post@steffenvogel.de>
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.6
// source: core/interface.proto

package core

import (
	proto "github.com/stv0g/cunicu/pkg/proto"
	epdisc "github.com/stv0g/cunicu/pkg/proto/feature/epdisc"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Type of the WireGuard interface implementation
type InterfaceType int32

const (
	InterfaceType_UNSPECIFIED_INTERFACE_TYPE InterfaceType = 0
	InterfaceType_KERNEL_LINUX               InterfaceType = 1
	InterfaceType_KERNEL_OPENBSD             InterfaceType = 2
	InterfaceType_KERNEL_FREEBSD             InterfaceType = 3
	InterfaceType_KERNEL_WINDOWS             InterfaceType = 4
	InterfaceType_USERSPACE                  InterfaceType = 5
)

// Enum value maps for InterfaceType.
var (
	InterfaceType_name = map[int32]string{
		0: "UNSPECIFIED_INTERFACE_TYPE",
		1: "KERNEL_LINUX",
		2: "KERNEL_OPENBSD",
		3: "KERNEL_FREEBSD",
		4: "KERNEL_WINDOWS",
		5: "USERSPACE",
	}
	InterfaceType_value = map[string]int32{
		"UNSPECIFIED_INTERFACE_TYPE": 0,
		"KERNEL_LINUX":               1,
		"KERNEL_OPENBSD":             2,
		"KERNEL_FREEBSD":             3,
		"KERNEL_WINDOWS":             4,
		"USERSPACE":                  5,
	}
)

func (x InterfaceType) Enum() *InterfaceType {
	p := new(InterfaceType)
	*p = x
	return p
}

func (x InterfaceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InterfaceType) Descriptor() protoreflect.EnumDescriptor {
	return file_core_interface_proto_enumTypes[0].Descriptor()
}

func (InterfaceType) Type() protoreflect.EnumType {
	return &file_core_interface_proto_enumTypes[0]
}

func (x InterfaceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InterfaceType.Descriptor instead.
func (InterfaceType) EnumDescriptor() ([]byte, []int) {
	return file_core_interface_proto_rawDescGZIP(), []int{0}
}

// A WireGuard interface
// See: https://pkg.go.dev/golang.zx2c4.com/wireguard/wgctrl/wgtypes#Device
type Interface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type              InterfaceType     `protobuf:"varint,2,opt,name=type,proto3,enum=cunicu.core.InterfaceType" json:"type,omitempty"`
	PublicKey         []byte            `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	PrivateKey        []byte            `protobuf:"bytes,4,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	ListenPort        uint32            `protobuf:"varint,5,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	FirewallMark      uint32            `protobuf:"varint,6,opt,name=firewall_mark,json=firewallMark,proto3" json:"firewall_mark,omitempty"`
	Peers             []*Peer           `protobuf:"bytes,7,rep,name=peers,proto3" json:"peers,omitempty"`
	Ice               *epdisc.Interface `protobuf:"bytes,8,opt,name=ice,proto3" json:"ice,omitempty"`
	Ifindex           uint32            `protobuf:"varint,9,opt,name=ifindex,proto3" json:"ifindex,omitempty"`
	Mtu               uint32            `protobuf:"varint,10,opt,name=mtu,proto3" json:"mtu,omitempty"`
	LastSyncTimestamp *proto.Timestamp  `protobuf:"bytes,11,opt,name=last_sync_timestamp,json=lastSyncTimestamp,proto3" json:"last_sync_timestamp,omitempty"`
}

func (x *Interface) Reset() {
	*x = Interface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_interface_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface) ProtoMessage() {}

func (x *Interface) ProtoReflect() protoreflect.Message {
	mi := &file_core_interface_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface.ProtoReflect.Descriptor instead.
func (*Interface) Descriptor() ([]byte, []int) {
	return file_core_interface_proto_rawDescGZIP(), []int{0}
}

func (x *Interface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Interface) GetType() InterfaceType {
	if x != nil {
		return x.Type
	}
	return InterfaceType_UNSPECIFIED_INTERFACE_TYPE
}

func (x *Interface) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *Interface) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *Interface) GetListenPort() uint32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *Interface) GetFirewallMark() uint32 {
	if x != nil {
		return x.FirewallMark
	}
	return 0
}

func (x *Interface) GetPeers() []*Peer {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *Interface) GetIce() *epdisc.Interface {
	if x != nil {
		return x.Ice
	}
	return nil
}

func (x *Interface) GetIfindex() uint32 {
	if x != nil {
		return x.Ifindex
	}
	return 0
}

func (x *Interface) GetMtu() uint32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *Interface) GetLastSyncTimestamp() *proto.Timestamp {
	if x != nil {
		return x.LastSyncTimestamp
	}
	return nil
}

var File_core_interface_proto protoreflect.FileDescriptor

var file_core_interface_proto_rawDesc = []byte{
	0x0a, 0x14, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63, 0x75, 0x6e, 0x69, 0x63, 0x75, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x65, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x65, 0x70, 0x64, 0x69,
	0x73, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99, 0x03, 0x0a, 0x09, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x75, 0x6e, 0x69, 0x63,
	0x75, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66,
	0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x4d, 0x61, 0x72, 0x6b,
	0x12, 0x27, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x75, 0x6e, 0x69, 0x63, 0x75, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x65,
	0x65, 0x72, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x03, 0x69, 0x63, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x75, 0x6e, 0x69, 0x63, 0x75, 0x2e,
	0x65, 0x70, 0x64, 0x69, 0x73, 0x63, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x52, 0x03, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x74, 0x75, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x74,
	0x75, 0x12, 0x41, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x75, 0x6e, 0x69, 0x63, 0x75, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2a, 0x8c, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x45, 0x52, 0x4e, 0x45, 0x4c,
	0x5f, 0x4c, 0x49, 0x4e, 0x55, 0x58, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4b, 0x45, 0x52, 0x4e,
	0x45, 0x4c, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x42, 0x53, 0x44, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e,
	0x4b, 0x45, 0x52, 0x4e, 0x45, 0x4c, 0x5f, 0x46, 0x52, 0x45, 0x45, 0x42, 0x53, 0x44, 0x10, 0x03,
	0x12, 0x12, 0x0a, 0x0e, 0x4b, 0x45, 0x52, 0x4e, 0x45, 0x4c, 0x5f, 0x57, 0x49, 0x4e, 0x44, 0x4f,
	0x57, 0x53, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x53, 0x45, 0x52, 0x53, 0x50, 0x41, 0x43,
	0x45, 0x10, 0x05, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x73, 0x74, 0x76, 0x30, 0x67, 0x2f, 0x63, 0x75, 0x6e, 0x69, 0x63, 0x75, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_core_interface_proto_rawDescOnce sync.Once
	file_core_interface_proto_rawDescData = file_core_interface_proto_rawDesc
)

func file_core_interface_proto_rawDescGZIP() []byte {
	file_core_interface_proto_rawDescOnce.Do(func() {
		file_core_interface_proto_rawDescData = protoimpl.X.CompressGZIP(file_core_interface_proto_rawDescData)
	})
	return file_core_interface_proto_rawDescData
}

var file_core_interface_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_core_interface_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_core_interface_proto_goTypes = []interface{}{
	(InterfaceType)(0),       // 0: cunicu.core.InterfaceType
	(*Interface)(nil),        // 1: cunicu.core.Interface
	(*Peer)(nil),             // 2: cunicu.core.Peer
	(*epdisc.Interface)(nil), // 3: cunicu.epdisc.Interface
	(*proto.Timestamp)(nil),  // 4: cunicu.Timestamp
}
var file_core_interface_proto_depIdxs = []int32{
	0, // 0: cunicu.core.Interface.type:type_name -> cunicu.core.InterfaceType
	2, // 1: cunicu.core.Interface.peers:type_name -> cunicu.core.Peer
	3, // 2: cunicu.core.Interface.ice:type_name -> cunicu.epdisc.Interface
	4, // 3: cunicu.core.Interface.last_sync_timestamp:type_name -> cunicu.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_core_interface_proto_init() }
func file_core_interface_proto_init() {
	if File_core_interface_proto != nil {
		return
	}
	file_core_peer_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_core_interface_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_core_interface_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_interface_proto_goTypes,
		DependencyIndexes: file_core_interface_proto_depIdxs,
		EnumInfos:         file_core_interface_proto_enumTypes,
		MessageInfos:      file_core_interface_proto_msgTypes,
	}.Build()
	File_core_interface_proto = out.File
	file_core_interface_proto_rawDesc = nil
	file_core_interface_proto_goTypes = nil
	file_core_interface_proto_depIdxs = nil
}
