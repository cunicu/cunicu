"use strict";(self.webpackChunkwice=self.webpackChunkwice||[]).push([[2413],{3125:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>d});var s=r(7462),i=(r(7294),r(3905));r(1839);const o={title:"Peer Discovery"},a="Peer Discovery",n={unversionedId:"features/pdisc",id:"features/pdisc",title:"Peer Discovery",description:"The peer discovery feature can be used to find other peers.",source:"@site/docs/features/pdisc.md",sourceDirName:"features",slug:"/features/pdisc",permalink:"/docs/features/pdisc",draft:!1,editUrl:"https://github.com/stv0g/cunicu/edit/master/docs/features/pdisc.md",tags:[],version:"current",frontMatter:{title:"Peer Discovery"},sidebar:"tutorialSidebar",previous:{title:"Hosts-file Synchronization",permalink:"/docs/features/hsync"},next:{title:"Pre-shared Key Establishment",permalink:"/docs/features/pske"}},c={},d=[],p={toc:d};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,s.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"peer-discovery"},"Peer Discovery"),(0,i.kt)("p",null,"The peer discovery feature can be used to find other peers.\nA set of peers is identified by a common ",(0,i.kt)("em",{parentName:"p"},"community passphrase"),"."),(0,i.kt)("p",null,"Peers belonging to the same community will be added as WireGuard peers to the interface configuration."),(0,i.kt)("p",null,"No other tasks are performed.\nPaired with other features like the ",(0,i.kt)("a",{parentName:"p",href:"/docs/features/epdisc"},"endpoint discovery"),", ",(0,i.kt)("a",{parentName:"p",href:"/docs/features/autocfg"},"auto configuration")," or ",(0,i.kt)("a",{parentName:"p",href:"/docs/features/rtsync"},"route synchronization"),", the peer discovery is a cornerstone of a zero-configuration peer-to-peer VPN."),(0,i.kt)("p",null,"In addition to community passphrase, peers can be accepted by white- and blacklist filtering."))}u.isMDXComponent=!0}}]);