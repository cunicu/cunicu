"use strict";(self.webpackChunkwice=self.webpackChunkwice||[]).push([[6435],{7746:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>u});var n=r(7462),i=(r(7294),r(3905));r(1839);const s={title:"Route Synchronization"},a="Route Synchronization",o={unversionedId:"features/rtsync",id:"features/rtsync",title:"Route Synchronization",description:"The route synchronization feature keeps the kernel routing table in sync with WireGuard's AllowedIPs setting.",source:"@site/docs/features/rtsync.md",sourceDirName:"features",slug:"/features/rtsync",permalink:"/docs/features/rtsync",draft:!1,editUrl:"https://github.com/stv0g/cunicu/edit/master/docs/features/rtsync.md",tags:[],version:"current",frontMatter:{title:"Route Synchronization"},sidebar:"tutorialSidebar",previous:{title:"Pre-shared Key Establishment",permalink:"/docs/features/pske"},next:{title:"Usage",permalink:"/docs/usage/"}},l={},u=[],c={toc:u};function d(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"route-synchronization"},"Route Synchronization"),(0,i.kt)("p",null,"The route synchronization feature keeps the kernel routing table in sync with WireGuard's ",(0,i.kt)("em",{parentName:"p"},"AllowedIPs")," setting."),(0,i.kt)("p",null,"This synchronization is bi-directional:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Networks with are found in a Peers AllowedIP list will be installed as a kernel route."),(0,i.kt)("li",{parentName:"ul"},"Kernel routes with the peers link-local IP address as next-hop will be added to the Peers ",(0,i.kt)("em",{parentName:"li"},"AllowedIPs")," list.")),(0,i.kt)("p",null,"This rather simple feature allows user to pair cunicu with a software routing daemon like ",(0,i.kt)("a",{parentName:"p",href:"https://bird.network.cz/"},"Bird2")," while using a single WireGuard interface with multiple peer-to-peer links."))}d.isMDXComponent=!0}}]);