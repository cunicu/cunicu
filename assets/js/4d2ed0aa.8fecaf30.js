"use strict";(self.webpackChunkwice=self.webpackChunkwice||[]).push([[9901],{1054:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var t=a(7462),o=(a(7294),a(3905));a(1839);const i={title:"cunicu daemon",sidebar_label:"daemon",sidebar_class_name:"command-name",slug:"/usage/man/daemon",hide_title:!0,keywords:["manpage"]},r=void 0,s={unversionedId:"usage/md/cunicu_daemon",id:"usage/md/cunicu_daemon",title:"cunicu daemon",description:"cunicu daemon",source:"@site/docs/usage/md/cunicu_daemon.md",sourceDirName:"usage/md",slug:"/usage/man/daemon",permalink:"/docs/usage/man/daemon",draft:!1,editUrl:"https://github.com/stv0g/cunicu/tree/master/website/docs/usage/md/cunicu_daemon.md",tags:[],version:"current",frontMatter:{title:"cunicu daemon",sidebar_label:"daemon",sidebar_class_name:"command-name",slug:"/usage/man/daemon",hide_title:!0,keywords:["manpage"]},sidebar:"tutorialSidebar",previous:{title:"config set",permalink:"/docs/usage/man/config/set"},next:{title:"monitor",permalink:"/docs/usage/man/monitor"}},c={},d=[{value:"cunicu daemon",id:"cunicu-daemon",level:2},{value:"Examples",id:"examples",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],u={toc:d};function l(e){let{components:n,...a}=e;return(0,o.kt)("wrapper",(0,t.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"cunicu-daemon"},"cunicu daemon"),(0,o.kt)("p",null,"Start the daemon"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cunicu daemon [interface-names...] [flags]\n")),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ cunicu daemon -u -x mysecretpass wg0\n")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'  -A, --auto-config                         Enable setup of link-local addresses and missing interface options (default true)\n  -b, --backend URL                         One or more URLs to signaling backends\n  -x, --community passphrase                A passphrase shared with other peers in the same community\n  -c, --config filename                     One or more filenames of configuration files\n  -w, --config-path directory               The directory of WireGuard wg/wg-quick configuration files\n  -S, --config-sync                         Enable synchronization of WireGuard configuration files (default true)\n  -W, --config-watch                        Watch and synchronize changes to the WireGuard configuration files\n  -D, --domain domain                       A DNS domain name used for DNS auto-configuration\n  -I, --endpoint-disc                       Enable ICE endpoint discovery (default true)\n  -H, --host-sync                           Enable synchronization of /etc/hosts file (default true)\n      --ice-candidate-type candidate-type   Usable candidate-types (one of host, srflx, prflx, relay)\n      --ice-network-type network-type       Usable network-types (one of udp4, udp6, tcp4, tcp6)\n  -P, --password password                   The password for STUN/TURN credentials\n  -R, --route-sync                          Enable synchronization of AllowedIPs and Kernel routing table (default true)\n  -T, --route-table string                  Kernel routing table to use (default "main")\n  -s, --rpc-socket path                     The path of the unix socket used by other cunicu commands\n      --rpc-wait                            Wait until first client connected to control socket before continuing start\n  -a, --url URL                             One or more URLs of STUN and/or TURN servers\n  -U, --username username                   The username for STUN/TURN credentials\n  -i, --watch-interval duration             An interval at which we are periodically polling the kernel for updates on WireGuard interfaces\n  -f, --wg-interface-filter regex           A regex for filtering WireGuard interfaces (e.g. "wg-.*") (default ".*")\n  -u, --wg-userspace                        Create new interfaces with userspace WireGuard implementation\n  -h, --help                                help for daemon\n')),(0,o.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'  -C, --color string       Enable colorization of output (one of: auto, always, never) (default "auto")\n  -l, --log-file string    path of a file to write logs to\n  -d, --log-level string   log level (one of: debug, info, warn, error, dpanic, panic, and fatal) (default "info")\n  -v, --verbose int        verbosity level\n')),(0,o.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/usage/man/"},"cunicu"),"\t - cun\u012bcu is a user-space daemon managing WireGuard\xae interfaces to establish peer-to-peer connections in harsh network environments.")))}l.isMDXComponent=!0}}]);