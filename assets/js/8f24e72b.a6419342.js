"use strict";(self.webpackChunkcunicu=self.webpackChunkcunicu||[]).push([[5734],{63226:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>i,metadata:()=>t,toc:()=>o});var a=n(85893),d=n(11151);const i={title:"cunicu addresses",sidebar_label:"addresses",sidebar_class_name:"command-name",slug:"/usage/man/addresses",hide_title:!0,keywords:["manpage"]},r=void 0,t={id:"usage/md/cunicu_addresses",title:"cunicu addresses",description:"cunicu addresses",source:"@site/docs/usage/md/cunicu_addresses.md",sourceDirName:"usage/md",slug:"/usage/man/addresses",permalink:"/docs/usage/man/addresses",draft:!1,unlisted:!1,editUrl:"https://github.com/cunicu/cunicu/edit/main/docs/usage/md/cunicu_addresses.md",tags:[],version:"current",frontMatter:{title:"cunicu addresses",sidebar_label:"addresses",sidebar_class_name:"command-name",slug:"/usage/man/addresses",hide_title:!0,keywords:["manpage"]},sidebar:"tutorialSidebar",previous:{title:"cunicu",permalink:"/docs/usage/man/"},next:{title:"completion",permalink:"/docs/usage/man/completion"}},c={},o=[{value:"cunicu addresses",id:"cunicu-addresses",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Examples",id:"examples",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function u(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h2,{id:"cunicu-addresses",children:"cunicu addresses"}),"\n",(0,a.jsx)(s.p,{children:"Derive IPv4 and IPv6 addresses from a WireGuard X25519 public key"}),"\n",(0,a.jsx)(s.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,a.jsx)(s.p,{children:"cun\u012bcu auto-configuration feature derives and assigns IPv4 and IPv6 addresses based on the public key of the WireGuard interface.\nThis sub-command accepts a WireGuard public key on the standard input and prints out the calculated IP addresses on the standard output."}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"cunicu addresses [flags]\n"})}),"\n",(0,a.jsx)(s.h3,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"$ wg genkey | wg pubkey | cunicu addresses\nfc2f:9a4d:777f:7a97:8197:4a5d:1d1b:ed79\n10.237.119.127\n"})}),"\n",(0,a.jsx)(s.h3,{id:"options",children:"Options"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"  -h, --help   help for addresses\n  -m, --mask   Print CIDR mask\n"})}),"\n",(0,a.jsx)(s.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:'  -q, --color string            Enable colorization of output (one of: auto, always, never) (default "auto")\n  -l, --log-file stringArray    path of a file to write logs to\n  -d, --log-level stringArray   log level filter rule (one of: debug, info, warn, error, dpanic, panic, and fatal) (default "info")\n'})}),"\n",(0,a.jsx)(s.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.a,{href:"/docs/usage/man/",children:"cunicu"}),"\t - cun\u012bcu is a user-space daemon managing WireGuard\xae interfaces to establish peer-to-peer connections in harsh network environments."]}),"\n"]})]})}function l(e={}){const{wrapper:s}={...(0,d.a)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},11151:(e,s,n)=>{n.d(s,{Z:()=>t,a:()=>r});var a=n(67294);const d={},i=a.createContext(d);function r(e){const s=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),a.createElement(i.Provider,{value:s},e.children)}}}]);