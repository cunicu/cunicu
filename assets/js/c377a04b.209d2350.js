"use strict";(self.webpackChunkwice=self.webpackChunkwice||[]).push([[6971],{1269:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var n=a(7462),i=(a(7294),a(3905));a(1839);const r={title:"Welcome",sidebar_position:1,hide_title:!0},o=void 0,s={unversionedId:"index",id:"index",title:"Welcome",description:"GitHub Workflow Status",source:"@site/docs/index.md",sourceDirName:".",slug:"/",permalink:"/docs/",draft:!1,editUrl:"https://github.com/stv0g/cunicu/tree/master/website/docs/index.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Welcome",sidebar_position:1,hide_title:!0},sidebar:"tutorialSidebar",next:{title:"Installation",permalink:"/docs/installation"}},c={},l=[{value:"Getting started",id:"getting-started",level:2},{value:"Documentation",id:"documentation",level:2},{value:"Authors",id:"authors",level:2},{value:"Join us",id:"join-us",level:2},{value:"Name",id:"name",level:2},{value:"License",id:"license",level:2},{value:"Funding acknowledgement",id:"funding-acknowledgement",level:2},{value:"Trademark",id:"trademark",level:2}],u={toc:l};function p(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",{align:"center"},(0,i.kt)("img",{style:{width:"60%"},src:"/img/cunicu_logo.svg",alt:"cun\u012bcu logo"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/stv0g/cunicu/actions"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/github/workflow/status/stv0g/cunicu/build?style=flat-square",alt:"GitHub Workflow Status"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://goreportcard.com/report/github.com/stv0g/cunicu"},(0,i.kt)("img",{parentName:"a",src:"https://goreportcard.com/badge/github.com/stv0g/cunicu?style=flat-square",alt:"goreportcard"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://app.codacy.com/gh/stv0g/cunicu/"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/codacy/grade/4c4ecfff2f0d43948ded3d90f0bcf0cf?style=flat-square",alt:"Codacy grade"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://app.codecov.io/gh/stv0g/cunicu"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/codecov/c/github/stv0g/cunicu?token=WWQ6SR16LA&style=flat-square",alt:"Codecov"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/stv0g/cunicu/blob/master/LICENSE"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/github/license/stv0g/cunicu?style=flat-square",alt:"License"})),"\n",(0,i.kt)("img",{parentName:"p",src:"https://img.shields.io/github/go-mod/go-version/stv0g/cunicu?style=flat-square",alt:"GitHub go.mod Go version"}),"\n",(0,i.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/stv0g/cunicu"},(0,i.kt)("img",{parentName:"a",src:"https://pkg.go.dev/badge/github.com/stv0g/cunicu.svg",alt:"Go Reference"})))),(0,i.kt)("admonition",{type:"danger"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("strong",{parentName:"p"},"\ud83d\udea7 cun\u012bcu is currently still in an Alpha state and not usable yet"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/stv0g/cunicu"},"cun\u012bcu")," is a user-space daemon managing ",(0,i.kt)("a",{parentName:"p",href:"https://wireguard.com"},"WireGuard\xae")," interfaces to establish peer-to-peer connections in harsh network environments."),(0,i.kt)("p",null,"It relies on the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/pion/awesome-pion"},"awesome")," ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/pion/ice"},"pion/ice")," package for the interactive connectivity establishment as well as bundles the Go user-space implementation of WireGuard in a single binary for environments in which WireGuard kernel support has not landed yet."),(0,i.kt)("h2",{id:"getting-started"},"Getting started"),(0,i.kt)("p",null,"To use cun\u012bcu follow these steps on each host:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/docs/installation"},"Install cun\u012bcu")),(0,i.kt)("li",{parentName:"ol"},"Configure your WireGuard interfaces using ",(0,i.kt)("inlineCode",{parentName:"li"},"wg"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"wg-quick")," or ",(0,i.kt)("a",{parentName:"li",href:"https://blogs.gnome.org/thaller/2019/03/15/wireguard-in-networkmanager/"},"NetworkManager")),(0,i.kt)("li",{parentName:"ol"},"Start the cun\u012bcu daemon by running: ",(0,i.kt)("inlineCode",{parentName:"li"},"sudo cunicu daemon"))),(0,i.kt)("p",null,"Make sure that in step 2. you have created WireGuard keys and exchanged them by hand between the hosts.\ncun\u012bcu does not (yet) discover available peers. You are responsible to add the peers to the WireGuard interface by yourself."),(0,i.kt)("p",null,"After the cun\u012bcu daemons have been started, they will attempt to discover valid endpoint addresses using the ICE protocol (e.g. contacting STUN servers).\nThese ",(0,i.kt)("em",{parentName:"p"},"ICE candidates")," are then exchanged via the signaling server and cun\u012bcu will update the endpoint addresses of the WireGuard peers accordingly.\nOnce this has been done, the cun\u012bcu logs should show a line ",(0,i.kt)("inlineCode",{parentName:"p"},"state=connected"),"."),(0,i.kt)("h2",{id:"documentation"},"Documentation"),(0,i.kt)("p",null,"Documentation of cun\u012bcu can be found in the ",(0,i.kt)("a",{parentName:"p",href:"./docs"},(0,i.kt)("inlineCode",{parentName:"a"},"docs/"))," directory."),(0,i.kt)("h2",{id:"authors"},"Authors"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Steffen Vogel (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/stv0g"},"@stv0g"),", Institute for Automation of Complex Power Systems, RWTH Aachen University)")),(0,i.kt)("h2",{id:"join-us"},"Join us"),(0,i.kt)("p",null,"Please feel free to ",(0,i.kt)("a",{parentName:"p",href:"https://join.slack.com/t/gophers/shared_invite/zt-1447h1rgj-s9W5BcyRzBxUwNAZJUKmaQ"},"join our Slack channel")," ",(0,i.kt)("inlineCode",{parentName:"p"},"#cunicu")," in the ",(0,i.kt)("a",{parentName:"p",href:"https://gophers.slack.com/"},"Gophers workspace")," and say \ud83d\udc4b."),(0,i.kt)("h2",{id:"name"},"Name"),(0,i.kt)("p",null,"The project name ",(0,i.kt)("em",{parentName:"p"},"cun\u012bcu")," ","[k\u028a\u02c8ni\u02d0k\u028a]"," is derived from the ",(0,i.kt)("a",{parentName:"p",href:"https://en.wiktionary.org/wiki/cuniculus#Latin"},"latin noun cun\u012bculus")," which means rabbit, a rabbit burrow or underground tunnel. We have choosen it as a name for this project as ",(0,i.kt)("em",{parentName:"p"},"cun\u012bcu")," builds tunnels between otherwise hard to reach network locations.\nIt has been changed from the former name ",(0,i.kt)("em",{parentName:"p"},"wice")," in order to broaden the scope of the project and avoid any potential trademark violations. "),(0,i.kt)("h2",{id:"license"},"License"),(0,i.kt)("p",null,"cun\u012bcu is licensed under the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/stv0g/cunicu/blob/master/LICENSE"},"Apache 2.0")," license."),(0,i.kt)("p",null,"Copyright 2022 Institute for Automation of Complex Power Systems, RWTH Aachen University"),(0,i.kt)("h2",{id:"funding-acknowledgement"},"Funding acknowledgement"),(0,i.kt)("img",{alt:"European Flag",style:{height:"4em",marginRight:"10px"},src:"/img/flag_of_europe.svg",align:"left"}),(0,i.kt)("p",null,"The development of cun\u012bcu has been supported by the ",(0,i.kt)("a",{parentName:"p",href:"https://erigrid2.eu"},"ERIGrid 2.0")," project of the H2020 Programme under ",(0,i.kt)("a",{parentName:"p",href:"https://cordis.europa.eu/project/id/870620"},"Grant Agreement No. 870620")),(0,i.kt)("h2",{id:"trademark"},"Trademark"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"WireGuard")," and the ",(0,i.kt)("em",{parentName:"p"},"WireGuard")," logo are ",(0,i.kt)("a",{parentName:"p",href:"https://www.wireguard.com/trademark-policy/"},"registered trademarks")," of Jason A. Donenfeld."))}p.isMDXComponent=!0}}]);