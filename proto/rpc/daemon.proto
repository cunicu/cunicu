// SPDX-FileCopyrightText: 2023 Steffen Vogel <post@steffenvogel.de>
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package cunicu.rpc;
option go_package = "github.com/stv0g/cunicu/pkg/proto/rpc";

import "core/interface.proto";
import "common.proto";
import "rpc/event.proto";
import "rpc/invitation.proto";

message ConfigValue {
    string scalar = 1;
    repeated string list = 2;
}

message GetStatusParams {
    string interface = 1;
    bytes peer = 2;
}

message GetStatusResp {
    repeated core.Interface interfaces = 1;
}

message SetConfigParams {
    map<string, ConfigValue> settings = 1;
}

message GetConfigParams {
    string key_filter = 1;
}

message GetConfigResp {
    map<string, ConfigValue> settings = 1;
}

message AddPeerParams {
    string interface = 1;
    bytes public_key = 2;
    string name = 3;
}

message AddPeerResp {
    Invitation invitation = 1;
    core.Interface interface = 2;
}

message ShutdownParams {
    bool restart = 1;
}

message GetCompletionParams {
    repeated string cmd = 1;
    repeated string args = 2;
    string to_complete = 3;
}

message GetCompletionResp {
    repeated string options = 1;
    int32 flags = 2;
}

service Daemon {
    rpc GetBuildInfo(Empty) returns (BuildInfo) {}
    rpc StreamEvents(Empty) returns (stream Event) {}
    rpc UnWait(Empty) returns (Empty) {}
    rpc Shutdown(ShutdownParams) returns (Empty) {}
    rpc Sync(Empty) returns (Empty) {}
    rpc GetStatus(GetStatusParams) returns (GetStatusResp) {}
    
    rpc SetConfig(SetConfigParams) returns (Empty) {}
    rpc GetConfig(GetConfigParams) returns (GetConfigResp) {}
    rpc GetCompletion(GetCompletionParams) returns (GetCompletionResp) {}
    rpc ReloadConfig(Empty) returns (Empty) {}
    
    rpc AddPeer(AddPeerParams) returns (AddPeerResp) {}
}